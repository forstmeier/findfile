#!/bin/bash

# generate_query creates a ready-to-run
# cURL command for querying the API with
# the user-provided inputs
# 
# a fourth "run" argument can be optionally
# provided to directly execute the cURL
# command instead of printing it out to
# the console

if [[ -z $1 || -z $2 || -z $3 ]]; then
	echo 'one or more arguments are undefined: provide text, page number, and coordinates'
	exit 1
fi

STACK_NAME=findfile

STACKS_INFO=$(aws cloudformation describe-stacks --stack-name $STACK_NAME)

STACK_OUTPUTS=$( jq -r  '.Stacks[0].Outputs' <<< "${STACKS_INFO}" ) 

QUERY_API_ENDPOINT=$( jq -r 'map(select(.OutputKey == "QueryAPIEndpoint")) | .[0].OutputValue' <<< "${STACK_OUTPUTS}" )

HTTP_SECURITY_KEY_HEADER=$( jq -r 'map(select(.OutputKey == "HTTPSecurityKeyHeader")) | .[0].OutputValue' <<< "${STACK_OUTPUTS}" )

HTTP_SECURITY_KEY_VALUE=$( jq -r 'map(select(.OutputKey == "HTTPSecurityKeyValue")) | .[0].OutputValue' <<< "${STACK_OUTPUTS}" )

DATA=$( jq -n \
--arg text "$1" \
--argjson page_number $2 \
--argjson coordinates $3 \
'{
	"search": {
		"text": $text,
		"page_number": $page_number,
		"coordinates": $coordinates
	}
}'
)

if [[ $4 = "run" ]]; then
curl -X POST \
	"$QUERY_API_ENDPOINT" \
	--header "Content-Type: application/json" \
	--header "$HTTP_SECURITY_KEY_HEADER: $HTTP_SECURITY_KEY_VALUE" \
	--data "$DATA"
else
echo curl -X POST \
	$QUERY_API_ENDPOINT \
	--header \"Content-Type: application/json\" \
	--header \"$HTTP_SECURITY_KEY_HEADER: $HTTP_SECURITY_KEY_VALUE\" \
	--data \'$DATA\'
fi